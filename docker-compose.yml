version: '3.8'

services:
  postgresql:
    image: postgres:14-alpine
    container_name: mikrotik_monitor_db
    restart: always
    environment:
      - POSTGRES_USER=mikmon
      - POSTGRES_PASSWORD=mikmon_secure_password
      - POSTGRES_DB=mikmon
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mikmon"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build: .
    container_name: mikrotik_monitor_app
    restart: always
    depends_on:
      postgresql:
        condition: service_healthy
    environment:
      - FLASK_APP=main.py
      - FLASK_ENV=production
      - FLASK_DEBUG=0
      - SECRET_KEY=change_this_to_a_random_secure_key
      - JWT_SECRET_KEY=change_this_to_a_random_secure_key
      - WTF_CSRF_SECRET_KEY=change_this_to_a_random_secure_key
      - DATABASE_URL=postgresql://mikmon:mikmon_secure_password@postgresql:5432/mikmon
      - MIKROTIK_CONNECTION_TIMEOUT=10
      - MIKROTIK_COMMAND_TIMEOUT=15
    ports:
      - "5050:5050"

volumes:
  postgres_data: